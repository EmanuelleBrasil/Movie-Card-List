{"ast":null,"code":"var _jsxFileName = \"/home/emanuelle/Trybe/sd-07-project-movie-card-library-crud/src/pages/MovieDetails.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n    this.state = {\n      movie: [],\n      isLoading: true\n    };\n    this.removeMovie = this.removeMovie.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMovie();\n  }\n\n  async fetchMovie() {\n    const {\n      id\n    } = this.props.match.params;\n    const movieData = await movieAPI.getMovie(id);\n    this.setState({\n      movie: movieData,\n      isLoading: false\n    });\n  }\n\n  async removeMovie() {\n    const {\n      id\n    } = this.props.match.params;\n    await movieAPI.deleteMovie(id);\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n    if (this.state.isLoading) return /*#__PURE__*/React.createElement(Loading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 38\n      }\n    });\n    const {\n      title,\n      storyline,\n      imagePath,\n      genre,\n      rating,\n      subtitle\n    } = this.state.movie;\n    const {\n      id\n    } = this.props.match.params;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      \"data-testid\": \"movie-details\",\n      className: \"movie-details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"movie-card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, `Title: ${title}`), /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Movie Cover\",\n      src: `../${imagePath}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movie-information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"movie-card-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, `Subtitle: ${subtitle}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }\n    }, `Storyline: ${storyline}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, `Genre: ${genre}`), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, `Rating: ${rating}`)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"link-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/movies/${id}/edit`,\n      className: \"edit-link\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, \"EDITAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: '/',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, \"VOLTAR\"), /*#__PURE__*/React.createElement(Link, {\n      to: '/',\n      onClick: this.removeMovie,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, \"DELETAR\")));\n  }\n\n}\n\nexport default MovieDetails;\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number\n    })\n  })\n}.isRequired;","map":{"version":3,"sources":["/home/emanuelle/Trybe/sd-07-project-movie-card-library-crud/src/pages/MovieDetails.js"],"names":["React","Component","PropTypes","Link","movieAPI","Loading","MovieDetails","constructor","state","movie","isLoading","removeMovie","bind","componentDidMount","fetchMovie","id","props","match","params","movieData","getMovie","setState","deleteMovie","render","title","storyline","imagePath","genre","rating","subtitle","propTypes","shape","number","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport * as movieAPI from '../services/movieAPI';\nimport { Loading } from '../components';\n\nclass MovieDetails extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      movie: [],\n      isLoading: true,\n    };\n    this.removeMovie = this.removeMovie.bind(this);\n  }\n  componentDidMount() {\n    this.fetchMovie();\n  }\n\n  async fetchMovie() {\n    const { id } = this.props.match.params;\n    const movieData = await movieAPI.getMovie(id);\n    this.setState({ movie: movieData, isLoading: false });\n  }\n\n  async removeMovie() {\n    const { id } = this.props.match.params;\n    await movieAPI.deleteMovie(id);\n  }\n\n  render() {\n    // Change the condition to check the state\n    // if (true) return <Loading />;\n    if (this.state.isLoading) return <Loading />;\n    const { title, storyline, imagePath, genre, rating, subtitle } = this.state.movie;\n    const { id } = this.props.match.params;\n\n    return (\n      <div data-testid=\"movie-details\" className=\"movie-details\">\n        <p className=\"movie-card-title\">{`Title: ${title}`}</p>\n        <img alt=\"Movie Cover\" src={`../${imagePath}`} />\n        <div className=\"movie-information\">\n          <p className=\"movie-card-subtitle\">{`Subtitle: ${subtitle}`}</p>\n          <p>{`Storyline: ${storyline}`}</p>\n          <p>{`Genre: ${genre}`}</p>\n          <p>{`Rating: ${rating}`}</p>\n        </div>\n        <div className=\"link-group\">\n          <Link to={`/movies/${id}/edit`} className=\"edit-link\">EDITAR</Link>\n          <Link to={'/'}>VOLTAR</Link>\n          <Link to={'/'} onClick={this.removeMovie}>DELETAR</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetails;\n\nMovieDetails.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.number,\n    }),\n  }),\n}.isRequired;\n"]},"metadata":{},"sourceType":"module"}